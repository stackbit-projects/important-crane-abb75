type IpApi_Location {
  """
  success or fail
  """
  status: String
  """
  included only when status is fail
  Can be one of the following: private range, reserved range, invalid query
  """
  message: String
  """
  Continent name
  """
  continent: String
  """
  Two-letter continent code
  """
  continentCode: String
  """
  Country name
  """
  country: String
  """
  Two-letter country code ISO 3166-1 alpha-2
  """
  countryCode: String
  """
  Region/state short code (FIPS or ISO)
  """
  region: String
  """
  Region/state
  """
  regionName: String
  """
  City
  """
  city: String
  """
  District (subdivision of city)
  """
  district: String
  """
  Zip code
  """
  zip: String
  """
  Latitude
  """
  lat: Float
  """
  Longitude
  """
  lon: Float
  """
  Timezone (tz)
  """
  timezone: String
  """
  Timezone UTC DST offset in seconds
  """
  offset: Int
  """
  National currency
  """
  currency: String
  """
  ISP name
  """
  isp: String
  """
  Organization name
  """
  org: String
  """
  AS number and organization, separated by space (RIR). Empty for IP blocks not being announced in BGP tables.
  """
  as: String
  """
  Reverse DNS of the IP (can delay response).  Not in default fields.
  """
  reserve: String
  """
  Mobile (cellular) connection
  """
  mobile: Boolean
  """
  Proxy, VPN or Tor exit address
  """
  proxy: Boolean
  """
  Hosting, colocated or data center
  """
  hosting: Boolean
  """
  IP used for the query
  """
  ip: String
}

"""
StepZen_Request encapsulates many details of the call, here we are only interested in the ip address
"""
type IpApi_StepZen_Request {
  clientIp: String
}

type Query {
  """
  IP Geolocation.
  https://ip-api.com/docs/api:json
  """
  ipApi_location(
    """
    query ip (or domain)
    """
    ip: String!
    """
    ISO 639 code
    """
    lang: String! = "en"
  ): IpApi_Location
    @rest(
      endpoint: "http://ip-api.com/json/$ip?fields=64745471&lang=$lang"
      setters: [{ field: "ip", path: "query" }]
      configuration: "ip-api_config"
    )
  """
  Fetch IP Address of the caller
  """
  ipApi_stepzen_request: IpApi_StepZen_Request @connector(type: "request")
  """
  Fetch Details for the caller in two steps (@sequence directive)
  1. Fetch IP Address of the caller
  2. Use that IP Address to fetch details from ip-api
  """
  ipApi_location_Auto(lang: String! = "en"): IpApi_Location
    @sequence(
      steps: [
        { query: "ipApi_stepzen_request" }
        {
          query: "ipApi_location"
          arguments: [{ name: "ip", field: "clientIp" }]
        }
      ]
    )
}
